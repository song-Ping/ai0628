<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="product_reply">
    <select id="select" resultType="com.example.test0703.dto.Product_reply" parameterType="com.example.test0703.dto.Product_reply">
        WITH RECURSIVE CTE AS (
        SELECT idx_reply, idx_products,
        ref_idx_reply, ref_level, content,
        convert(idx_reply, CHAR(255)) AS path FROM products_reply
        WHERE idx_products = #{idx_products}
        AND ref_idx_reply = 0
        UNION ALL
        SELECT uc.idx_reply, uc.idx_products,
        uc.ref_idx_reply, uc.ref_level, uc.content,
        convert(concat(CTE.path,'-',uc.idx_reply),CHAR(255)) AS path FROM products_reply uc
        INNER JOIN CTE ON uc.ref_idx_reply = CTE.idx_reply
        WHERE uc.idx_products = #{idx_products}
        )
        SELECT * FROM CTE
        ORDER BY convert(SUBSTRING_INDEX(PATH,'-',1), UNSIGNED) ASC, idx_reply ASC,
        CONVERT(SUBSTRING_INDEX(PATH,'-',2), UNSIGNED) ASC, idx_reply ASC;
    </select>

    <insert id="insert" parameterType="com.example.test0703.dto.Product_reply">
        insert into
            products_reply(idx_products, ref_idx_reply, ref_level, content)
        values
            (#{idx_products}, #{ref_idx_reply}, #{ref_level}, #{content})
    </insert>
    <select id="selectrow" parameterType="com.example.test0703.dto.Product_reply" resultType="com.example.test0703.dto.Product_reply">
        select
                *
        from
                products_reply
        where   idx=#{idx}
    </select>
    <delete id="delete" parameterType="com.example.test0703.dto.Product_reply">
        delete
        from products_reply
        where idx_reply = ${idx_reply}
    </delete>
</mapper>
<!--다른 파일에서 이 sql문 호출할때 mapper namespace(product)쓰고 . 붙이고 sql id 쓰면됨
    ex) product.insert-->
<!--parametertype은 보내주는 타입 ,resultType은 parameter로 보낸거 다시 돌려받아야됨(select의 경우)-->